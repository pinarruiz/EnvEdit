---
include:
  - local: /ci/generics.yml

.generic_test:
  stage: tests
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_REF_SLUG == "main"
    - if: $CI_COMMIT_TAG
    - when: never

.node_tests:
  extends:
    - .node_job
    - .generic_test

.python_tests:
  extends:
    - .python_job
    - .generic_test

eslint:
  extends: .node_tests
  script:
    - pnpm lint -f junit -o eslint-result.xml
    - pnpm lint
  artifacts:
    reports:
      junit: eslint-result.xml
    when: always

prettier:
  extends: .node_tests
  script:
    - pnpm prettier -c .

test_build:
  extends: .node_tests
  cache:
    - key: ${CI_COMMIT_REF_SLUG}-node-cache
      paths:
        - .pnpm-store
    - key: ${CI_COMMIT_REF_SLUG}-next-cache
      paths:
        - .next/cache
  script:
    - pnpm build

shell_check:
  extends: .generic_test
  image: koalaman/shellcheck-alpine:v0.10.0
  before_script:
    - apk add git xmlstarlet
    - git ls-files --exclude='*.sh' --ignored -c
  script:
    - shellcheck -f checkstyle $(git ls-files --exclude='*.sh' --ignored -c) | xmlstarlet tr ci/utils/checkstyle2junit.xslt > shellcheck-result.xml
  artifacts:
    reports:
      junit: shellcheck-result.xml
    when: always

yamllint:
  extends: .python_tests
  script:
    - yamllint .
    - yamllint -f parsable . | yamllint-junit -o yamllint-result.xml
  artifacts:
    reports:
      junit: yamllint-result.xml
    when: always

markdownlint:
  extends: .node_tests
  script:
    - pnpm markdownlint-cli2 --config ci/utils/.markdownlint-cli2.jsonc $(git ls-files --exclude='*.md' --ignored -c)
  artifacts:
    reports:
      junit: markdownlint-result.xml
      codequality: markdownlint-result.json
    when: always

hadolint:
  extends: .generic_test
  image: hadolint/hadolint:2.12.0-alpine
  before_script:
    - mkdir -p hadolint-result
    - hadolint Dockerfile || true
  script:
    - hadolint -f gitlab_codeclimate Dockerfile > hadolint-result/hadolint-$(md5sum Dockerfile | cut -d" " -f1).json
  artifacts:
    reports:
      codequality:
        - hadolint-result/*
    when: always

secret_detection:
  extends: .generic_test
  image: registry.gitlab.com/security-products/secrets:6.8.0
  variables:
    GIT_DEPTH: "50"
  script:
    - /analyzer run
  artifacts:
    access: 'developer'
    reports:
      secret_detection: gl-secret-detection-report.json
    when: always
