---
docker_build_push:
  stage: build
  image: docker:27.5.0-cli
  needs:
    - job: prettier
      artifacts: false
    - job: test_build
      artifacts: false
    - job: eslint
      artifacts: false
    - job: shell_check
      artifacts: false
    - job: yamllint
      artifacts: false
    - job: markdownlint
      artifacts: false
    - job: hadolint
      artifacts: false
    - job: secret_detection
      artifacts: false
  services:
    - docker:27.5.0-dind
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_REF_SLUG == "main"
    - if: $CI_COMMIT_TAG
    - when: never
  before_script:
    - apk add git
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - |
      if [ "$CI_COMMIT_REF_PROTECTED" == "true" ]; then
        docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
        docker login -u $GITHUB_USERNAME -p $GITHUB_TOKEN $GITHUB_REGISTRY
      fi
    - |
      docker buildx create --driver docker-container \
      --driver-opt default-load=true \
      --name=container --bootstrap --use
  script:
    - ash ci/utils/docker-metadata.sh
    - |
      docker buildx build --builder=container  \
      --push --provenance=false \
      $(ash ci/utils/docker-metadata.sh) \
      --platform linux/arm64/v8,linux/amd64 \
      --cache-to type=registry,ref=$CI_REGISTRY_IMAGE/cache \
      --cache-from type=registry,ref=$CI_REGISTRY_IMAGE/cache .

container_scanning:
  image: registry.gitlab.com/security-products/container-scanning:7.3.17
  stage: postbuild
  variables:
    CS_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    GIT_STRATEGY: none
    CS_DOCKERFILE_PATH: Dockerfile
    CS_SCHEMA_MODEL: 15
  needs:
    - docker_build_push
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_REF_SLUG == "main"
    - if: $CI_COMMIT_TAG
    - when: never
  artifacts:
    access: 'developer'
    reports:
      container_scanning: gl-container-scanning-report.json
      cyclonedx: "**/gl-sbom-*.cdx.json"
    paths: [gl-container-scanning-report.json, gl-dependency-scanning-report.json, "**/gl-sbom-*.cdx.json"]
  dependencies: []
  script:
    - gtcs scan
